# Configuration file for Retail Customer Segmentation POC
# This file contains all configurable parameters for the segmentation pipeline

# Project Information
project:
  name: "Retail Customer Segmentation POC"
  version: "0.1.0"
  description: "Customer segmentation using fuzzy clustering and neural networks with MCP integration"

# Directory Paths
paths:
  # Data directories
  data_dir: "data"
  raw_data_dir: "data/raw"
  processed_data_dir: "data/processed"
  output_dir: "data/output"
  
  # Visualization directories
  visualizations_dir: "visualizations"
  
  # Model directories
  models_dir: "models"
  checkpoints_dir: "models/checkpoints"
  
  # Source data files
  source_data:
    product_hierarchy: "data/product_hierarchy.csv"
    customer_sales_basic: "data/customer_sales_data_basic.csv"
    customer_sales_enriched: "data/customer_sales_data_enriched.csv"
  
  # Output files
  output_files:
    customers_with_segments: "data/customers_with_segments.csv"
    segments_for_ai: "data/customer_segments_for_ai.json"
    cluster_report: "data/cluster_report.txt"
    
  # Visualization outputs
  visualization_files:
    cluster_distribution: "visualizations/cluster_distribution.png"
    segment_characteristics: "visualizations/segment_characteristics.png"
    rfm_scatter: "visualizations/rfm_scatter.png"
    membership_heatmap: "visualizations/membership_heatmap.png"
    department_preferences: "visualizations/department_preferences.png"
    size_distribution: "visualizations/size_distribution.png"
    persona_type_by_cluster: "visualizations/persona_type_by_cluster.png"

# Data Generation Configuration
data_generation:
  n_customers: 10000
  random_seed: 42
  
  # Persona-based generation
  use_personas: true  # Enable persona-based customer generation
  personas_config_file: "config/personas.yml"  # Path to persona definitions (10 personas)
  hierarchy_config_file: "hierarchy_parsed.yml"  # Path to full product hierarchy (21 depts, 394 classes)
  
  # Dataset output options
  generate_dual_datasets: true  # Generate both basic and enriched datasets
  basic_dataset_path: "data/customer_sales_data_basic.csv"
  enriched_dataset_path: "data/customer_sales_data_enriched.csv"
  
  # Dataset Format Information:
  # BASIC DATASET (51 columns):
  #   - Core RFM features: total_purchases, total_revenue, avg_order_value, recency_days, etc.
  #   - 21 dept_total_value columns (one per department)
  #   - 21 dept_total_units columns (one per department)
  #   - Size/age counts: count_Baby, count_Child, count_size_XS/S/M/L/XL
  #   - Used for: Quick analysis, lightweight processing
  #
  # ENRICHED DATASET (757 columns):
  #   - All BASIC columns PLUS:
  #   - Persona info: persona_type, first_name, last_name, email, phone, address, city, state, zip, country
  #   - 394 class_total_value columns (one per product class)
  #   - 394 class_total_units columns (one per product class)
  #   - Used for: Clustering algorithms, visualization, analysis, reporting (provides richest feature space)
  
  # Faker settings for realistic profile fields
  faker:
    enabled: true      # Toggle to include first_name, last_name, email, phone, address, etc.
    locale: "en_US"   # Locale for Faker profile data (e.g., en_US, en_GB, fr_FR)
  
  # FULL PRODUCT HIERARCHY - 21 departments, 394 classes
  # Loaded from hierarchy_parsed.yml - see that file for complete list
  # Major departments include:
  # - Accessories (35 classes)
  # - Health & Beauty (30 classes)
  # - Home (34 classes)
  # - Kids Clothing (22 classes)
  # - Kids Accessories (21 classes)
  # - Ladies Clothing (43 classes)
  # - Ladies Footwear (26 classes)
  # - Ladies Hosiery (21 classes)
  # - Mens Clothing (34 classes)
  # - Mens Accessories (27 classes)
  # - Primarket (15 classes)
  # - Sports Shop (11 classes)
  # - Uwear & Nwear (36 classes)
  # - Xmas Shop (17 classes)
  # Plus: Bag Levy, Concessions, Dummy, Gift Cards, Goods Not For Resale, In-Store Charity
  
  #
  
  child_ages:
    - "Baby"
    - "Child"
  
  adult_sizes:
    - "XS"
    - "S"
    - "M"
    - "L"
    - "XL"

# Column Definitions
columns:
  # Core customer features
  core_features:
    customer_id:
      type: "string"
      description: "Unique customer identifier"
      format: "CUST_XXXXX"
    
    total_purchases:
      type: "integer"
      description: "Total number of purchases made by customer"
      min: 0
    
    total_revenue:
      type: "float"
      description: "Total revenue generated by customer"
      min: 0.0
      unit: "USD"
    
    avg_order_value:
      type: "float"
      description: "Average order value per transaction"
      min: 0.0
      unit: "USD"
    
    recency_days:
      type: "integer"
      description: "Days since last purchase (Recency)"
      min: 0
    
    frequency_per_month:
      type: "float"
      description: "Average purchase frequency per month (Frequency)"
      min: 0.0
    
    customer_lifetime_months:
      type: "float"
      description: "Total months as a customer"
      min: 0.0
    
    return_rate:
      type: "float"
      description: "Percentage of returned items"
      min: 0.0
      max: 1.0
    
    true_segment:
      type: "integer"
      description: "Ground truth segment for validation (persona-based)"
      values: [1, 2, 3, 4]
    
    persona_type:
      type: "string"
      description: "Customer persona type from personas.yml"
      values: 
        - "professional_woman"
        - "professional_man"
        - "woman_young_family"
        - "man_young_family"
        - "young_woman_fashion"
        - "young_man_fashion"
        - "teenage_girl"
        - "teenage_boy"
        - "mature_shopper"
        - "budget_shopper"
    
    signup_date:
      type: "date"
      description: "Customer signup date"
      format: "YYYY-MM-DD"
    
    first_name:
      type: "string"
      description: "Customer first name (Faker generated)"
    
    last_name:
      type: "string"
      description: "Customer last name (Faker generated)"
    
    email:
      type: "string"
      description: "Customer email address (Faker generated)"
    
    phone:
      type: "string"
      description: "Customer phone number (Faker generated)"
    
    address:
      type: "string"
      description: "Customer street address (Faker generated)"
    
    city:
      type: "string"
      description: "Customer city (Faker generated)"
    
    state:
      type: "string"
      description: "Customer state (Faker generated)"
    
    zip_code:
      type: "string"
      description: "Customer zip code (Faker generated)"
    
    country:
      type: "string"
      description: "Customer country (Faker generated)"
  
  # Department enriched features (FULL HIERARCHY - 21 departments)
  department_features:
    pattern: "dept_total_value_{department_name}"
    type: "float"
    description: "Total value of purchases in this department"
    unit: "USD"
    departments:
      - "Accessories"
      - "Bag Levy"
      - "Concessions"
      - "Dummy"
      - "Dummy Dept for TBC order"
      - "Gift Cards"
      - "Goods Not For Resale"
      - "Health & Beauty"
      - "Home"
      - "In-Store Charity"
      - "Kids Accessories"
      - "Kids Clothing"
      - "Ladies Clothing"
      - "Ladies Footwear"
      - "Ladies Hosiery"
      - "Mens Accessories"
      - "Mens Clothing"
      - "Primarket"
      - "Sports Shop"
      - "Uwear & Nwear"
      - "Xmas Shop"
  
  department_units:
    pattern: "dept_total_units_{department_name}"
    type: "integer"
    description: "Total units purchased in this department"
    departments:
      - "Accessories"
      - "Bag Levy"
      - "Concessions"
      - "Dummy"
      - "Dummy Dept for TBC order"
      - "Gift Cards"
      - "Goods Not For Resale"
      - "Health & Beauty"
      - "Home"
      - "In-Store Charity"
      - "Kids Accessories"
      - "Kids Clothing"
      - "Ladies Clothing"
      - "Ladies Footwear"
      - "Ladies Hosiery"
      - "Mens Accessories"
      - "Mens Clothing"
      - "Primarket"
      - "Sports Shop"
      - "Uwear & Nwear"
      - "Xmas Shop"
  
  # Class enriched features (394 classes - see hierarchy_parsed.yml for complete list)
  class_features:
    pattern: "class_total_value_{class_name}"
    type: "float"
    description: "Total value of purchases in this class (394 total classes)"
    unit: "USD"
    note: "All 394 classes from hierarchy_parsed.yml are included in enriched dataset"
  
  class_units:
    pattern: "class_total_units_{class_name}"
    type: "integer"
    description: "Total units purchased in this class (394 total classes)"
    note: "All 394 classes from hierarchy_parsed.yml are included in enriched dataset"
  
  # Size/Age breakdown features
  child_age_features:
    pattern: "count_{age_group}"
    type: "integer"
    description: "Count of items for this age group"
    age_groups:
      - "Baby"
      - "Child"
  
  adult_size_features:
    pattern: "count_size_{size}"
    type: "integer"
    description: "Count of items in this adult size"
    sizes:
      - "XS"
      - "S"
      - "M"
      - "L"
      - "XL"
  
  # Cluster assignment columns (generated during segmentation)
  cluster_features:
    fuzzy_cluster:
      type: "integer"
      description: "Fuzzy clustering cluster assignment"
    
    neural_cluster:
      type: "integer"
      description: "Neural network clustering cluster assignment"
    
    segment_name:
      type: "string"
      description: "Human-readable segment name"
    
    fuzzy_membership_pattern:
      pattern: "fuzzy_membership_cluster_{cluster_id}"
      type: "float"
      description: "Fuzzy membership degree for this cluster"
      min: 0.0
      max: 1.0

# Product Hierarchy Configuration
product_hierarchy:
  file: "data/product_hierarchy.csv"
  columns:
    id:
      type: "integer"
      description: "Unique product hierarchy identifier"
    
    gender_age:
      type: "string"
      description: "Target gender/age demographic"
      values: ["Adult", "Woman", "Man", "Child", "Baby", "Unknown"]
    
    normalized_department:
      type: "string"
      description: "Normalized department name"
    
    normalized_class:
      type: "string"
      description: "Normalized class name"
    
    normalized_subclass:
      type: "string"
      description: "Normalized subclass name"

# Fuzzy Clustering Configuration
fuzzy_clustering:
  n_clusters: 13
  fuzziness_parameter: 2.0  # m parameter for FCM
  max_iterations: 150
  tolerance: 1e-5
  random_seed: 42
  
  # Feature selection for clustering (uses ENRICHED dataset - 757 columns)
  features_to_use:
    - "total_purchases"
    - "total_revenue"
    - "avg_order_value"
    - "recency_days"
    - "frequency_per_month"
    - "customer_lifetime_months"
    - "return_rate"
  
  # Note: Clustering uses enriched dataset (757 cols) with all department and class features
  # This provides richer feature space including all 21 departments and 394 product classes
  use_enriched_features: true
  
  # Output column names (generated after clustering)
  output_columns:
    cluster_label: "fuzzy_cluster"
    membership_prefix: "fuzzy_membership_cluster_"
    cluster_center_distance_prefix: "fuzzy_distance_to_cluster_"

# Neural Clustering Configuration
neural_clustering:
  n_clusters: 13
  encoding_dim: 10
  hidden_layers: [64, 32, 16]
  epochs: 50
  batch_size: 32
  learning_rate: 0.001
  random_seed: 42
  verbose: 0
  
  # Feature selection for clustering (uses ENRICHED dataset - 757 columns)
  features_to_use:
    - "total_purchases"
    - "total_revenue"
    - "avg_order_value"
    - "recency_days"
    - "frequency_per_month"
    - "customer_lifetime_months"
    - "return_rate"
  
  # Note: Clustering uses enriched dataset (757 cols) with all department and class features
  # This provides richer feature space including all 21 departments and 394 product classes
  use_enriched_features: true
  
  # Output column names (generated after clustering)
  output_columns:
    cluster_label: "neural_cluster"
    encoded_features_prefix: "neural_encoded_"

# Cluster Enrichment Configuration
cluster_enrichment:
  # Minimum cluster size to consider valid
  min_cluster_size: 5
  
  # Percentile thresholds for characterization
  percentiles:
    high_threshold: 75
    medium_threshold: 50
    low_threshold: 25
  
  # Export configuration
  export_format: "json"
  include_recommendations: true
  max_strategies_per_segment: 5

# Visualization Configuration
visualization:
  dpi: 150
  figure_format: "png"
  style: "seaborn-v0_8"
  color_palette: "Set2"
  
  # Figure sizes
  figure_sizes:
    default: [12, 6]
    distribution: [14, 5]
    characteristics: [15, 10]
    scatter: [15, 5]
    heatmap: [12, 6]
    department_prefs: [14, 6]
    size_dist: [15, 5]
  
  # Plot parameters
  plot_params:
    alpha: 0.7
    rotation: 45
    grid_alpha: 0.3
    sample_size_heatmap: 50

# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  log_file: "logs/segmentation.log"
  console_output: true

# Performance Configuration
performance:
  n_jobs: -1  # Number of parallel jobs (-1 = all cores)
  cache_data: true
  memory_limit_mb: 4096
